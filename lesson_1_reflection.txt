How did viewing a diff between two versions of a file help you see the bug that
was introduced?

  By using minus and plus signs showing which lines changed. You 
  can easily luck to see what was added, and quickly check the line
  for an error.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

  If you need to revert to a previous state, it's trivial. You can also 
  check your progress of logic and decide if it's progressing correctly.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

  The auto save isn't tracking what you get done, so its commits can be too big or too small. With manual save, if you are adept, then your commits will be the right logical size. 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

   Git deals with documents that are more logically related. Docs deals with documents meant to stand alone. 

How can you use the commands git log and git diff to view the history of files?

    Use git log to show all recent changes, including unique commit id and commit message. Then use git diff between two commit ids that you want to compare.

How might using version control make you more confident to make changes that
could break something?

    You can easily revert to an older state that wasn't broken. You can also easily see what you added that caused the break.

Now that you have your workspace set up, what do you want to try using Git for?

    My android projects
