What happends when you intialize a repository? Why should you need to do it?

It creates a place that you can use git commands. You should do this because you want to use git commands on your files for easy version control. 

How is the staging area different from the working directory and the repository? What value do you think it offers?

It's a virtual area that doesn't exist on disk or in git. It's useful because you can review what you're going to commit before you actually do it, helpful so that you don't commit something you don't need to and have to remedy that. 

How can you use the staging area to make sure you gave one commit per logical change?

You can use the diff --staged command to compare it the commit and verify it is indeed one logical change

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When you want to intoduce something to the code that is experimental or your just not ready to fully commit to, no pun intended. 

How do the diagrams help you visualize the branch structure?

The diagram looks like a tree, with distinct branches that don't intersect until the branch was made. This intersection is the last commit the two branches had in common. It also shows the parent relationship between commits, whereby moving back in the branch is to move up parents. 

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

It effectively removes the label of one branch and lets the branch it's being merged into obtain all the commits and its meta data, making it seemingly one branch again. It's represented as such in the diagram because they are now considered one entity instead of two. 